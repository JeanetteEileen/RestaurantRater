@model RestaurantRater.Models.Restaurant
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm()) 
{ 
    @Html.AntiForgeryToken()
<div class="form-horizontal"><!--start of form for inputs of user-->
    <h4>New Restaurant</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })  <!--All validation notes, true skip those that can be found elsewhere-->
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div><!--end form row 1-->
    </div><!--end form group 1-->
    <div class="form-group">
        @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div><!--end form row 2-->
    </div><!--end form group 2-->
    <div class="form-group">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rating, "", new { @class = "text-danger" })
        </div><!--end form row 3-->
    </div><!--end form group 3-->
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10"><!--offset 2 lets the btn be inline with other form items above-->
            <input type="submit" value="Submit Rating" class="btn btn-default" />
        </div><!--end of button-->
    </div><!--end of btn form group-->
</div><!--end of form inputs-->

}

<div>
    @Html.ActionLink("Back to List", "Index")<!--"Back to List" appears on screen and the Index tells where user is going-->
</div>